{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/fillipi/Documents/GitHub/podcastrnext/src/components/Player/index.tsx\";\nimport Image from 'next/image';\nimport { useRef, useEffect, useState } from 'react';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport { usePlayer } from '../../context/PlayerContext';\nimport styles from './styles.module.scss';\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\nexport function Player() {\n  var _episode$duration;\n\n  const audioRef = useRef(null);\n  cont[(progress, setProgress)] = useState(0);\n  const {\n    episodeList,\n    currentEpisodeIndex,\n    isPlaying,\n    isLooping,\n    isShuffling,\n    togglePlay,\n    toggleLoop,\n    toggleShuffle,\n    setPlayingState,\n    playNext,\n    playPrevious,\n    hasNext,\n    hasPrevious\n  } = usePlayer();\n  useEffect(() => {\n    if (!audioRef.current) {\n      return;\n    }\n\n    if (isPlaying) {\n      audioRef.current.play();\n    } else {\n      audioRef.current.pause();\n    }\n  }, [isPlaying]);\n  const episode = episodeList[currentEpisodeIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.playerContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/playing.svg\",\n        alt: \"Now playing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Now playing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), episode ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.currentEpisode,\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        width: 592,\n        height: 592,\n        src: episode.thumbnail,\n        objectFit: \"cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: episode.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.members\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.emptyPlayer,\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Select a podcast to listen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: !episode ? styles.empty : '',\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.progress,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"00:00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.slider,\n          children: episode ? /*#__PURE__*/_jsxDEV(Slider, {\n            trackStyle: {\n              backgroundColor: '#04d361'\n            },\n            railStyle: {\n              backgroundColor: '#9f75ff'\n            },\n            handleStyle: {\n              borderColor: '#04d361',\n              borderWidth: 4\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.emptySlider\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: convertDurationToTimeString((_episode$duration = episode === null || episode === void 0 ? void 0 : episode.duration) !== null && _episode$duration !== void 0 ? _episode$duration : 0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), episode && /*#__PURE__*/_jsxDEV(\"audio\", {\n        src: episode.url,\n        autoPlay: true,\n        loop: isLooping,\n        ref: audioRef,\n        onPlay: () => setPlayingState(true),\n        onPause: () => setPlayingState(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.buttons,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: !episode || episodeList.length === 1,\n          onClick: toggleShuffle,\n          className: isShuffling ? styles.isActive : '',\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/shuffle.svg\",\n            alt: \"Shuffle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: playPrevious,\n          disabled: !episode || !hasPrevious,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play-previous.svg\",\n            alt: \"Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: styles.playButton,\n          disabled: !episode,\n          onClick: togglePlay,\n          children: isPlaying ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/pause.svg\",\n            alt: \"Play\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play.svg\",\n            alt: \"Play\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: playNext,\n          disabled: !episode || !hasNext,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play-next.svg\",\n            alt: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: !episode,\n          onClick: toggleLoop,\n          className: isLooping ? styles.isActive : '',\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/repeat.svg\",\n            alt: \"Repeat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/fillipi/Documents/GitHub/podcastrnext/src/components/Player/index.tsx"],"names":["Image","useRef","useEffect","useState","Slider","usePlayer","styles","convertDurationToTimeString","Player","audioRef","cont","progress","setProgress","episodeList","currentEpisodeIndex","isPlaying","isLooping","isShuffling","togglePlay","toggleLoop","toggleShuffle","setPlayingState","playNext","playPrevious","hasNext","hasPrevious","current","play","pause","episode","playerContainer","currentEpisode","thumbnail","title","members","emptyPlayer","empty","slider","backgroundColor","borderColor","borderWidth","emptySlider","duration","url","buttons","length","isActive","playButton"],"mappings":"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","sourcesContent":["import Image from 'next/image';\nimport { useRef, useEffect, useState } from 'react';\nimport Slider from 'rc-slider';\n\nimport 'rc-slider/assets/index.css';\n\nimport { usePlayer } from '../../context/PlayerContext';\n\nimport styles from './styles.module.scss';\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\n\nexport function Player() {\n  const audioRef = useRef<HTMLAudioElement>(null);\n  cont[progress, setProgress] = useState(0);\n\n  const {\n    episodeList,\n    currentEpisodeIndex,\n    isPlaying,\n    isLooping,\n    isShuffling,\n    togglePlay,\n    toggleLoop,\n    toggleShuffle,\n    setPlayingState,\n    playNext,\n    playPrevious,\n    hasNext,\n    hasPrevious\n  } = usePlayer();\n\n  useEffect(() => {\n    if (!audioRef.current) {\n      return;\n    }\n\n    if (isPlaying) {\n      audioRef.current.play();\n    } else {\n      audioRef.current.pause();\n    }\n  }, [isPlaying])\n\n  const episode = episodeList[currentEpisodeIndex]\n\n  return (\n    <div className={styles.playerContainer}>\n      <header>\n        <img src=\"/playing.svg\" alt=\"Now playing\" />\n        <strong>Now playing</strong>\n      </header>\n\n      { episode ? (\n        <div className={styles.currentEpisode}>\n          <Image\n            width={592}\n            height={592}\n            src={episode.thumbnail}\n            objectFit=\"cover\"\n          />\n          <strong>{episode.title}</strong>\n          <span>{episode.members}</span>\n        </div>\n      ) : (\n        <div className={styles.emptyPlayer}>\n          <strong>Select a podcast to listen</strong>\n        </div>\n      )}\n\n      <footer className={!episode ? styles.empty : ''}>\n        <div className={styles.progress}>\n          <span>00:00</span>\n          <div className={styles.slider}>\n            {episode ? (\n              <Slider\n                trackStyle={{ backgroundColor: '#04d361' }}\n                railStyle={{ backgroundColor: '#9f75ff' }}\n                handleStyle={{ borderColor: '#04d361', borderWidth: 4 }}\n              />\n            ) : (\n              <div className={styles.emptySlider} />\n            )}\n          </div>\n          <span>{convertDurationToTimeString(episode?.duration ?? 0)}</span>\n        </div>\n\n        {episode && (\n          <audio\n            src={episode.url}\n            autoPlay\n            loop={isLooping}\n            ref={audioRef}\n            onPlay={() => setPlayingState(true)}\n            onPause={() => setPlayingState(false)}\n          />\n        )}\n\n        <div className={styles.buttons}>\n          <button\n            type=\"button\"\n            disabled={!episode || episodeList.length === 1}\n            onClick={toggleShuffle}\n            className={isShuffling ? styles.isActive : ''}\n          >\n            <img src=\"/shuffle.svg\" alt=\"Shuffle\" />\n          </button>\n          <button type=\"button\" onClick={playPrevious} disabled={!episode || !hasPrevious}>\n            <img src=\"/play-previous.svg\" alt=\"Previous\" />\n          </button>\n          <button\n            type=\"button\"\n            className={styles.playButton}\n            disabled={!episode}\n            onClick={togglePlay}\n          >\n            {isPlaying\n              ? <img src=\"/pause.svg\" alt=\"Play\" />\n              : <img src=\"/play.svg\" alt=\"Play\" />\n            }\n          </button>\n          <button type=\"button\" onClick={playNext} disabled={!episode || !hasNext}>\n            <img src=\"/play-next.svg\" alt=\"Next\" />\n          </button>\n          <button\n            type=\"button\"\n            disabled={!episode}\n            onClick={toggleLoop}\n            className={isLooping ? styles.isActive : ''}\n          >\n            <img src=\"/repeat.svg\" alt=\"Repeat\" />\n          </button>\n        </div>\n      </footer>\n    </div >\n  );\n}"]},"metadata":{},"sourceType":"module"}