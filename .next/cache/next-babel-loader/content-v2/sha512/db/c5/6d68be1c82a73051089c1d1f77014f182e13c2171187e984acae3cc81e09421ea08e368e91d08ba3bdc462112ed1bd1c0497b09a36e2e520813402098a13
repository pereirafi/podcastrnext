{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/fillipi/Documents/GitHub/podcastrnext/src/pages/index.tsx\";\nimport { format, parseISO } from 'date-fns'; // import { parseISO } from 'date-fns/locale';\n\nimport { api } from '../services/api';\nimport { convertDurationToTimeString } from '../convertDurationToTimeString';\nexport default function Home(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Index\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: JSON.stringify(props.episodes)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\nexport const getStaticProps = async () => {\n  const {\n    data\n  } = await api.get('episodes', {\n    params: {\n      _limit: 12,\n      _sort: 'published_at',\n      _order: 'desc'\n    }\n  });\n  const episodes = data.map(episode => ({\n    id: episode.id,\n    title: episode.title,\n    thumbnail: episode.thumbnail,\n    members: episode.members,\n    publishedAt: format(parseISO(episode.published_at), 'd-MMM-yy'),\n    duration: Number(episode.file.duration),\n    durationAsString: convertDurationToTimeString(Number(episode.file.duration)),\n    description: episode.description,\n    url: episode.file.url\n  }));\n  console.log(episodes);\n  return {\n    props: {\n      episodes\n    },\n    revalidate: 60 * 60 * 8\n  };\n};","map":{"version":3,"sources":["/Users/fillipi/Documents/GitHub/podcastrnext/src/pages/index.tsx"],"names":["format","parseISO","api","convertDurationToTimeString","Home","props","JSON","stringify","episodes","getStaticProps","data","get","params","_limit","_sort","_order","map","episode","id","title","thumbnail","members","publishedAt","published_at","duration","Number","file","durationAsString","description","url","console","log","revalidate"],"mappings":";;AAGA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,UAAjC,C,CACA;;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,SAASC,2BAAT,QAA4C,gCAA5C;AAcA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAgC;AAC7C,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAIC,IAAI,CAACC,SAAL,CAAeF,KAAK,CAACG,QAArB;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;AAED,OAAO,MAAMC,cAA8B,GAAG,YAAY;AACxD,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMR,GAAG,CAACS,GAAJ,CAAQ,UAAR,EAAoB;AACzCC,IAAAA,MAAM,EAAE;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,KAAK,EAAE,cAFD;AAGNC,MAAAA,MAAM,EAAE;AAHF;AADiC,GAApB,CAAvB;AAQA,QAAMP,QAAQ,GAAGE,IAAI,CAACM,GAAL,CAASC,OAAO,KAAK;AACpCC,IAAAA,EAAE,EAAED,OAAO,CAACC,EADwB;AAEpCC,IAAAA,KAAK,EAAEF,OAAO,CAACE,KAFqB;AAGpCC,IAAAA,SAAS,EAAEH,OAAO,CAACG,SAHiB;AAIpCC,IAAAA,OAAO,EAAEJ,OAAO,CAACI,OAJmB;AAKpCC,IAAAA,WAAW,EAAEtB,MAAM,CAACC,QAAQ,CAACgB,OAAO,CAACM,YAAT,CAAT,EAAiC,UAAjC,CALiB;AAMpCC,IAAAA,QAAQ,EAAEC,MAAM,CAACR,OAAO,CAACS,IAAR,CAAaF,QAAd,CANoB;AAOpCG,IAAAA,gBAAgB,EAAExB,2BAA2B,CAACsB,MAAM,CAACR,OAAO,CAACS,IAAR,CAAaF,QAAd,CAAP,CAPT;AAQpCI,IAAAA,WAAW,EAAEX,OAAO,CAACW,WARe;AASpCC,IAAAA,GAAG,EAAEZ,OAAO,CAACS,IAAR,CAAaG;AATkB,GAAL,CAAhB,CAAjB;AAYAC,EAAAA,OAAO,CAACC,GAAR,CAAYvB,QAAZ;AAIA,SAAO;AACLH,IAAAA,KAAK,EAAE;AACLG,MAAAA;AADK,KADF;AAILwB,IAAAA,UAAU,EAAE,KAAK,EAAL,GAAU;AAJjB,GAAP;AAMD,CA/BM","sourcesContent":["import { GetServerSideProps } from 'next';\n\nimport { GetStaticProps } from 'next';\nimport { format, parseISO } from 'date-fns';\n// import { parseISO } from 'date-fns/locale';\nimport { api } from '../services/api';\nimport { convertDurationToTimeString } from '../convertDurationToTimeString';\n\ntype Episode = {\n  id: string;\n  title: string;\n  members: string;\n  published_at: string;\n  // ...\n}\n\ntype HomeProps = {\n  episodes: Episode[];\n}\n\nexport default function Home(props: HomeProps) {\n  return (\n    <div>\n      <h1>Index</h1>\n      <p>{JSON.stringify(props.episodes)}</p>\n    </div>\n  )\n}\n\nexport const getStaticProps: GetStaticProps = async () => {\n  const { data } = await api.get('episodes', {\n    params: {\n      _limit: 12,\n      _sort: 'published_at',\n      _order: 'desc'\n    }\n  })\n\n  const episodes = data.map(episode => ({\n    id: episode.id,\n    title: episode.title,\n    thumbnail: episode.thumbnail,\n    members: episode.members,\n    publishedAt: format(parseISO(episode.published_at), 'd-MMM-yy'),\n    duration: Number(episode.file.duration),\n    durationAsString: convertDurationToTimeString(Number(episode.file.duration)),\n    description: episode.description,\n    url: episode.file.url,\n  }))\n\n  console.log(episodes);\n\n\n\n  return {\n    props: {\n      episodes,\n    },\n    revalidate: 60 * 60 * 8,\n  }\n}"]},"metadata":{},"sourceType":"module"}