{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/fillipi/Documents/GitHub/podcastrnext/src/pages/episodes/[slug].tsx\";\nimport Image from 'next/image';\nimport styles from './episode.module.scss';\nexport var __N_SSG = true;\nexport default function Episode(_ref) {\n  var episode = _ref.episode;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.episode,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.thumbnailContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/arrow-left.svg\",\n          alt: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Image, {\n        width: 700,\n        height: 160,\n        src: episode.thumbnail,\n        objectFit: \"cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_c = Episode;\n\nvar _c;\n\n$RefreshReg$(_c, \"Episode\");","map":{"version":3,"sources":["/Users/fillipi/Documents/GitHub/podcastrnext/src/pages/episodes/[slug].tsx"],"names":["Image","styles","Episode","episode","thumbnailContainer","thumbnail"],"mappings":";;AAEA,OAAOA,KAAP,MAAkB,YAAlB;AAIA,OAAOC,MAAP,MAAmB,uBAAnB;;AAkBA,eAAe,SAASC,OAAT,OAA4C;AAAA,MAAzBC,OAAyB,QAAzBA,OAAyB;AACzD,sBACE;AAAK,IAAA,SAAS,EAAEF,MAAM,CAACE,OAAvB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAEF,MAAM,CAACG,kBAAvB;AAAA,8BACE;AAAA,+BACE;AAAK,UAAA,GAAG,EAAC,iBAAT;AAA2B,UAAA,GAAG,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,KAAD;AACE,QAAA,KAAK,EAAE,GADT;AAEE,QAAA,MAAM,EAAE,GAFV;AAGE,QAAA,GAAG,EAAED,OAAO,CAACE,SAHf;AAIE,QAAA,SAAS,EAAC;AAJZ;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;KAhBuBH,O","sourcesContent":["import { format, parseISO } from 'date-fns';\nimport { GetStaticProps, GetStaticPaths } from 'next'\nimport Image from 'next/image';\n\nimport { api } from '../../services/api';\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\nimport styles from './episode.module.scss';\n\ntype Episode = {\n  id: string;\n  title: string;\n  thumbnail: string;\n  members: string;\n  duration: number;\n  durationAsString: string;\n  url: string;\n  publishedAt: string;\n  description: string;\n};\n\ntype EpisodeProps = {\n  episode: Episode;\n}\n\nexport default function Episode({ episode }: EpisodeProps) {\n  return (\n    <div className={styles.episode}>\n      <div className={styles.thumbnailContainer}>\n        <button>\n          <img src=\"/arrow-left.svg\" alt=\"Back\" />\n        </button>\n        <Image\n          width={700}\n          height={160}\n          src={episode.thumbnail}\n          objectFit=\"cover\"\n        />\n      </div>\n    </div>\n  )\n}\n\nexport const getStaticPaths: GetStaticPaths = async () => {\n  return {\n    paths: [],\n    fallback: 'blocking'\n  }\n}\n\nexport const getStaticProps: GetStaticProps = async (ctx) => {\n  const { slug } = ctx.params;\n\n  const { data } = await api.get(`/episodes/${slug}`);\n\n  const episode = {\n    id: data.id,\n    title: data.title,\n    thumbnail: data.thumbnail,\n    members: data.members,\n    publishedAt: format(parseISO(data.published_at), 'd MMM yy'),\n    duration: Number(data.file.duration),\n    durationAsString: convertDurationToTimeString(Number(data.file.duration)),\n    description: data.description,\n    url: data.file.url,\n  };\n\n  return {\n    props: {\n      episode,\n    },\n    revalidate: 60 * 60 * 24, // 24 hours\n  }\n}"]},"metadata":{},"sourceType":"module"}