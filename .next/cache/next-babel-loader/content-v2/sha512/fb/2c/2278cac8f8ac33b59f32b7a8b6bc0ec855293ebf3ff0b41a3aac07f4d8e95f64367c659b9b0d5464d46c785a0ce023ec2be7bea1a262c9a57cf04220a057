{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/fillipi/Documents/GitHub/podcastrnext/src/pages/index.tsx\";\nimport { format, parseISO } from 'date-fns';\nimport { api } from '../services/api';\nimport { convertDurationToTimeString } from '../convertDurationToTimeString';\nimport styles from './home.module.scss';\nexport default function Home({\n  latestEpisodes,\n  allEpisodes\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.homepage,\n    children: [/*#__PURE__*/_jsxDEV(\"selection\", {\n      className: styles.latestEpisodes,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Lastest episodes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: \"episodes.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"selection\", {\n      className: styles.allEpisodes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\nexport const getStaticProps = async () => {\n  const {\n    data\n  } = await api.get('episodes', {\n    params: {\n      _limit: 12,\n      _sort: 'published_at',\n      _order: 'desc'\n    }\n  });\n  const episodes = data.map(episode => ({\n    id: episode.id,\n    title: episode.title,\n    thumbnail: episode.thumbnail,\n    members: episode.members,\n    publishedAt: format(parseISO(episode.published_at), 'd-MMM-yy'),\n    duration: Number(episode.file.duration),\n    durationAsString: convertDurationToTimeString(Number(episode.file.duration)),\n    description: episode.description,\n    url: episode.file.url\n  }));\n  const latestEpisodes = episodes.slice(0, 2);\n  const allEpisodes = episodes.slice(2, episodes.lenght);\n  return {\n    props: {\n      latestEpisodes,\n      allEpisodes\n    },\n    revalidate: 60 * 60 * 8\n  };\n};","map":{"version":3,"sources":["/Users/fillipi/Documents/GitHub/podcastrnext/src/pages/index.tsx"],"names":["format","parseISO","api","convertDurationToTimeString","styles","Home","latestEpisodes","allEpisodes","homepage","getStaticProps","data","get","params","_limit","_sort","_order","episodes","map","episode","id","title","thumbnail","members","publishedAt","published_at","duration","Number","file","durationAsString","description","url","slice","lenght","props","revalidate"],"mappings":";;AAEA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,UAAjC;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,SAASC,2BAAT,QAA4C,gCAA5C;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;AAmBA,eAAe,SAASC,IAAT,CAAc;AAAEC,EAAAA,cAAF;AAAkBC,EAAAA;AAAlB,CAAd,EAA0D;AACvE,sBACE;AAAK,IAAA,SAAS,EAAEH,MAAM,CAACI,QAAvB;AAAA,4BACE;AAAW,MAAA,SAAS,EAAEJ,MAAM,CAACE,cAA7B;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eASE;AAAW,MAAA,SAAS,EAAEF,MAAM,CAACG;AAA7B;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;AAED,OAAO,MAAME,cAA8B,GAAG,YAAY;AACxD,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMR,GAAG,CAACS,GAAJ,CAAQ,UAAR,EAAoB;AACzCC,IAAAA,MAAM,EAAE;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,KAAK,EAAE,cAFD;AAGNC,MAAAA,MAAM,EAAE;AAHF;AADiC,GAApB,CAAvB;AAQA,QAAMC,QAAQ,GAAGN,IAAI,CAACO,GAAL,CAASC,OAAO,KAAK;AACpCC,IAAAA,EAAE,EAAED,OAAO,CAACC,EADwB;AAEpCC,IAAAA,KAAK,EAAEF,OAAO,CAACE,KAFqB;AAGpCC,IAAAA,SAAS,EAAEH,OAAO,CAACG,SAHiB;AAIpCC,IAAAA,OAAO,EAAEJ,OAAO,CAACI,OAJmB;AAKpCC,IAAAA,WAAW,EAAEvB,MAAM,CAACC,QAAQ,CAACiB,OAAO,CAACM,YAAT,CAAT,EAAiC,UAAjC,CALiB;AAMpCC,IAAAA,QAAQ,EAAEC,MAAM,CAACR,OAAO,CAACS,IAAR,CAAaF,QAAd,CANoB;AAOpCG,IAAAA,gBAAgB,EAAEzB,2BAA2B,CAACuB,MAAM,CAACR,OAAO,CAACS,IAAR,CAAaF,QAAd,CAAP,CAPT;AAQpCI,IAAAA,WAAW,EAAEX,OAAO,CAACW,WARe;AASpCC,IAAAA,GAAG,EAAEZ,OAAO,CAACS,IAAR,CAAaG;AATkB,GAAL,CAAhB,CAAjB;AAYA,QAAMxB,cAAc,GAAGU,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB,CAAlB,CAAvB;AACA,QAAMxB,WAAW,GAAGS,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkBf,QAAQ,CAACgB,MAA3B,CAApB;AAEA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACL3B,MAAAA,cADK;AAELC,MAAAA;AAFK,KADF;AAKL2B,IAAAA,UAAU,EAAE,KAAK,EAAL,GAAU;AALjB,GAAP;AAOD,CA/BM","sourcesContent":["import { GetServerSideProps } from 'next';\nimport { GetStaticProps } from 'next';\nimport { format, parseISO } from 'date-fns';\nimport { api } from '../services/api';\nimport { convertDurationToTimeString } from '../convertDurationToTimeString';\n\nimport styles from './home.module.scss';\n\ntype Episode = {\n  id: string;\n  title: string;\n  thumbnail: string;\n  description: string;\n  members: string;\n  duration: number;\n  durationAsString: string;\n  url: string;\n  publishedAt: string;\n}\n\ntype HomeProps = {\n  latestEpisodes: Episode[];\n  allEpisodes: Episode[];\n}\n\nexport default function Home({ latestEpisodes, allEpisodes }: HomeProps) {\n  return (\n    <div className={styles.homepage}>\n      <selection className={styles.latestEpisodes}>\n        <h2>Lastest episodes</h2>\n\n        <ul>\n          episodes.\n        </ul>\n      </selection>\n\n      <selection className={styles.allEpisodes}>\n\n\n      </selection>\n    </div>\n  )\n}\n\nexport const getStaticProps: GetStaticProps = async () => {\n  const { data } = await api.get('episodes', {\n    params: {\n      _limit: 12,\n      _sort: 'published_at',\n      _order: 'desc'\n    }\n  })\n\n  const episodes = data.map(episode => ({\n    id: episode.id,\n    title: episode.title,\n    thumbnail: episode.thumbnail,\n    members: episode.members,\n    publishedAt: format(parseISO(episode.published_at), 'd-MMM-yy'),\n    duration: Number(episode.file.duration),\n    durationAsString: convertDurationToTimeString(Number(episode.file.duration)),\n    description: episode.description,\n    url: episode.file.url,\n  }))\n\n  const latestEpisodes = episodes.slice(0, 2);\n  const allEpisodes = episodes.slice(2, episodes.lenght);\n\n  return {\n    props: {\n      latestEpisodes,\n      allEpisodes,\n    },\n    revalidate: 60 * 60 * 8,\n  }\n}"]},"metadata":{},"sourceType":"module"}