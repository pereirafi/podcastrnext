{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/fillipi/Documents/GitHub/podcastrnext/src/pages/episodes/[slug].tsx\";\nimport { useRouter } from 'next/router';\nimport { api } from '../../services/api';\nexport default function Episode() {\n  const router = useRouter();\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: router.query.slug\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\nexport const geStaticProps = async ctx => {\n  const {\n    slug\n  } = ctx.params;\n  const {\n    data\n  } = await api.get(`/episodes/${slug}`);\n  const episode = {\n    id: data.id,\n    title: data.title,\n    thumbnail: data.thumbnail,\n    members: data.members,\n    publishedAt: format(parseISO(data.published_at), 'd-MMM-yy'),\n    duration: Number(data.file.duration),\n    durationAsString: convertDurationToTimeString(Number(data.file.duration)),\n    description: data.description,\n    url: data.file.url\n  };\n  return {\n    props: {},\n    revalidate: 60 * 60 * 24 // 24 hours\n\n  };\n};","map":{"version":3,"sources":["/Users/fillipi/Documents/GitHub/podcastrnext/src/pages/episodes/[slug].tsx"],"names":["useRouter","api","Episode","router","query","slug","geStaticProps","ctx","params","data","get","episode","id","title","thumbnail","members","publishedAt","format","parseISO","published_at","duration","Number","file","durationAsString","convertDurationToTimeString","description","url","props","revalidate"],"mappings":";;AACA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,GAAT,QAAoB,oBAApB;AAEA,eAAe,SAASC,OAAT,GAAmB;AAChC,QAAMC,MAAM,GAAGH,SAAS,EAAxB;AAEA,sBACE;AAAA,cAAKG,MAAM,CAACC,KAAP,CAAaC;AAAlB;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;AAED,OAAO,MAAMC,aAA6B,GAAG,MAAOC,GAAP,IAAe;AAC1D,QAAM;AAAEF,IAAAA;AAAF,MAAWE,GAAG,CAACC,MAArB;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMR,GAAG,CAACS,GAAJ,CAAS,aAAYL,IAAK,EAA1B,CAAvB;AAEA,QAAMM,OAAO,GAAG;AACdC,IAAAA,EAAE,EAAEH,IAAI,CAACG,EADK;AAEdC,IAAAA,KAAK,EAAEJ,IAAI,CAACI,KAFE;AAGdC,IAAAA,SAAS,EAAEL,IAAI,CAACK,SAHF;AAIdC,IAAAA,OAAO,EAAEN,IAAI,CAACM,OAJA;AAKdC,IAAAA,WAAW,EAAEC,MAAM,CAACC,QAAQ,CAACT,IAAI,CAACU,YAAN,CAAT,EAA8B,UAA9B,CALL;AAMdC,IAAAA,QAAQ,EAAEC,MAAM,CAACZ,IAAI,CAACa,IAAL,CAAUF,QAAX,CANF;AAOdG,IAAAA,gBAAgB,EAAEC,2BAA2B,CAACH,MAAM,CAACZ,IAAI,CAACa,IAAL,CAAUF,QAAX,CAAP,CAP/B;AAQdK,IAAAA,WAAW,EAAEhB,IAAI,CAACgB,WARJ;AASdC,IAAAA,GAAG,EAAEjB,IAAI,CAACa,IAAL,CAAUI;AATD,GAAhB;AAYA,SAAO;AACLC,IAAAA,KAAK,EAAE,EADF;AAELC,IAAAA,UAAU,EAAE,KAAK,EAAL,GAAU,EAFjB,CAEqB;;AAFrB,GAAP;AAID,CArBM","sourcesContent":["import { GetStaticProps } from 'next';\nimport { useRouter } from 'next/router'\nimport { api } from '../../services/api';\n\nexport default function Episode() {\n  const router = useRouter();\n\n  return (\n    <h1>{router.query.slug}</h1>\n  )\n}\n\nexport const geStaticProps: GetStaticProps = async (ctx) => {\n  const { slug } = ctx.params;\n\n  const { data } = await api.get(`/episodes/${slug}`)\n\n  const episode = {\n    id: data.id,\n    title: data.title,\n    thumbnail: data.thumbnail,\n    members: data.members,\n    publishedAt: format(parseISO(data.published_at), 'd-MMM-yy'),\n    duration: Number(data.file.duration),\n    durationAsString: convertDurationToTimeString(Number(data.file.duration)),\n    description: data.description,\n    url: data.file.url,\n  };\n\n  return {\n    props: {},\n    revalidate: 60 * 60 * 24, // 24 hours\n  }\n}"]},"metadata":{},"sourceType":"module"}