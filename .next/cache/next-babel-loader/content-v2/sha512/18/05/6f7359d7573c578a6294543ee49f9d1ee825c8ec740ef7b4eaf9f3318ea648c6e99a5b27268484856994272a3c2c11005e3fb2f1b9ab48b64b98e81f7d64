{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/fillipi/Documents/GitHub/podcastrnext/src/pages/index.tsx\";\nexport var __N_SSG = true;\nexport default function Home(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Index\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: new Date(props.episodes[0].published_at).toLocaleDateString\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/fillipi/Documents/GitHub/podcastrnext/src/pages/index.tsx"],"names":["Home","props","Date","episodes","published_at","toLocaleDateString"],"mappings":";;;AAgBA,eAAe,SAASA,IAAT,CAAcC,KAAd,EAAgC;AAC7C,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAI,IAAIC,IAAJ,CAASD,KAAK,CAACE,QAAN,CAAe,CAAf,EAAkBC,YAA3B,EAAyCC;AAA7C;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;KAPuBL,I","sourcesContent":["import { GetStaticProps } from 'next';\nimport { format, parseISO } from 'date-fns';\nimport { api } from '../services/api';\n\ntype Episode = {\n  id: string;\n  title: string;\n  members: string;\n  published_at: string;\n  // ...\n}\n\ntype HomeProps = {\n  episodes: Episode[];\n}\n\nexport default function Home(props: HomeProps) {\n  return (\n    <div>\n      <h1>Index</h1>\n      <p>{new Date(props.episodes[0].published_at).toLocaleDateString}</p>\n    </div>\n  )\n}\n\nexport const getStaticProps: GetStaticProps = async () => {\n  const { data } = await api.get('episodes', {\n    params: {\n      _limit: 12,\n      _sort: 'published_at',\n      _order: 'desc'\n    }\n  })\n\n  const episodes = data.map(episode => {\n    return {\n      id: episode.id,\n      title: episode.title,\n      thumbnail: episode.thumbnail,\n      members: episode.member,\n      publishedAt: format(parseISO(episode.published_at), 'd MMM YY'),\n    };\n  })\n\n  return {\n    props: {\n      episodes: data,\n    },\n    revalidate: 60 * 60 * 8,\n\n  }\n}"]},"metadata":{},"sourceType":"module"}