{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/fillipi/Documents/GitHub/podcastrnext/src/pages/episodes/[slug].tsx\",\n    _s = $RefreshSig$();\n\nimport Image from 'next/image';\nimport Link from 'next/link';\nimport styles from './episode.module.scss';\nimport { usePlayer } from '../../context/PlayerContext';\nimport Head from 'next/head';\nexport var __N_SSG = true;\nexport default function Episode(_ref) {\n  _s();\n\n  var episode = _ref.episode;\n\n  var _usePlayer = usePlayer(),\n      play = _usePlayer.play;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.episode,\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: [episode.title, \" | Podcastr\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.thumbnailContainer,\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        href: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/arrow-left.svg\",\n            alt: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Image, {\n        width: 700,\n        height: 160,\n        src: episode.thumbnail,\n        objectFit: \"cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: function onClick() {\n          return play(episode);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/play.svg\",\n          alt: \"Play episode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: episode.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.members\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.publishedAt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.durationAsString\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.description,\n      dangerouslySetInnerHTML: {\n        __html: episode.description\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Episode, \"mptMREsNBTdRfLLVAN69g5qilFU=\", false, function () {\n  return [usePlayer];\n});\n\n_c = Episode;\n\nvar _c;\n\n$RefreshReg$(_c, \"Episode\");","map":{"version":3,"sources":["/Users/fillipi/Documents/GitHub/podcastrnext/src/pages/episodes/[slug].tsx"],"names":["Image","Link","styles","usePlayer","Head","Episode","episode","play","title","thumbnailContainer","thumbnail","members","publishedAt","durationAsString","description","__html"],"mappings":";;;;;AACA,OAAOA,KAAP,MAAkB,YAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAOA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,SAASC,SAAT,QAA0B,6BAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAkBA,eAAe,SAASC,OAAT,OAA4C;AAAA;;AAAA,MAAzBC,OAAyB,QAAzBA,OAAyB;;AAAA,mBACxCH,SAAS,EAD+B;AAAA,MACjDI,IADiD,cACjDA,IADiD;;AAGzD,sBACE;AAAK,IAAA,SAAS,EAAEL,MAAM,CAACI,OAAvB;AAAA,4BACE,QAAC,IAAD;AAAA,6BACE;AAAA,mBAAQA,OAAO,CAACE,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,SAAS,EAAEN,MAAM,CAACO,kBAAvB;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,GAAX;AAAA,+BACE;AAAA,iCACE;AAAK,YAAA,GAAG,EAAC,iBAAT;AAA2B,YAAA,GAAG,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,KAAD;AACE,QAAA,KAAK,EAAE,GADT;AAEE,QAAA,MAAM,EAAE,GAFV;AAGE,QAAA,GAAG,EAAEH,OAAO,CAACI,SAHf;AAIE,QAAA,SAAS,EAAC;AAJZ;AAAA;AAAA;AAAA;AAAA,cANF,eAYE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE;AAAA,iBAAMH,IAAI,CAACD,OAAD,CAAV;AAAA,SAA/B;AAAA,+BACE;AAAK,UAAA,GAAG,EAAC,WAAT;AAAqB,UAAA,GAAG,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAsBE;AAAA,8BACE;AAAA,kBAAKA,OAAO,CAACE;AAAb;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAOF,OAAO,CAACK;AAAf;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,kBAAOL,OAAO,CAACM;AAAf;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA,kBAAON,OAAO,CAACO;AAAf;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBF,eA8BE;AACE,MAAA,SAAS,EAAEX,MAAM,CAACY,WADpB;AAEE,MAAA,uBAAuB,EAAE;AAAEC,QAAAA,MAAM,EAAET,OAAO,CAACQ;AAAlB;AAF3B;AAAA;AAAA;AAAA;AAAA,YA9BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD;;GAxCuBT,O;UACLF,S;;;KADKE,O","sourcesContent":["import { format, parseISO } from 'date-fns';\nimport Image from 'next/image';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router'\nimport { GetStaticProps, GetStaticPaths } from 'next'\n\nimport { api } from '../../services/api';\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\n\nimport styles from './episode.module.scss';\nimport { usePlayer } from '../../context/PlayerContext';\nimport Head from 'next/head';\n\ntype Episode = {\n  id: string;\n  title: string;\n  thumbnail: string;\n  members: string;\n  duration: number;\n  durationAsString: string;\n  url: string;\n  publishedAt: string;\n  description: string;\n};\n\ntype EpisodeProps = {\n  episode: Episode;\n}\n\nexport default function Episode({ episode }: EpisodeProps) {\n  const { play } = usePlayer();\n\n  return (\n    <div className={styles.episode}>\n      <Head>\n        <title>{episode.title} | Podcastr</title>\n      </Head>\n\n      <div className={styles.thumbnailContainer}>\n        <Link href=\"/\">\n          <button>\n            <img src=\"/arrow-left.svg\" alt=\"Back\" />\n          </button>\n        </Link>\n        <Image\n          width={700}\n          height={160}\n          src={episode.thumbnail}\n          objectFit=\"cover\"\n        />\n        <button type=\"button\" onClick={() => play(episode)}>\n          <img src=\"/play.svg\" alt=\"Play episode\" />\n        </button>\n      </div>\n\n      <header>\n        <h1>{episode.title}</h1>\n        <span>{episode.members}</span>\n        <span>{episode.publishedAt}</span>\n        <span>{episode.durationAsString}</span>\n      </header>\n\n\n      <div\n        className={styles.description}\n        dangerouslySetInnerHTML={{ __html: episode.description }}\n      />\n    </div>\n  )\n}\n\nexport const getStaticPaths: GetStaticPaths = async () => {\n  const { data } = await api.get('episodes', {\n    params: {\n      _limit: 12,\n      _sort: 'published_at',\n      _order: 'desc'\n    }\n  })\n\n  const paths = data.map(episode => {\n    return {\n      params: {\n        slug: episode.id\n      }\n    }\n  })\n\n  return {\n    paths,\n    fallback: 'blocking'\n  }\n}\n\nexport const getStaticProps: GetStaticProps = async (ctx) => {\n  const { slug } = ctx.params;\n\n  const { data } = await api.get(`/episodes/${slug}`);\n\n  const episode = {\n    id: data.id,\n    title: data.title,\n    thumbnail: data.thumbnail,\n    members: data.members,\n    publishedAt: format(parseISO(data.published_at), 'd MMM yy'),\n    duration: Number(data.file.duration),\n    durationAsString: convertDurationToTimeString(Number(data.file.duration)),\n    description: data.description,\n    url: data.file.url,\n  };\n\n  return {\n    props: {\n      episode,\n    },\n    revalidate: 60 * 60 * 24, // 24 hours\n  }\n}"]},"metadata":{},"sourceType":"module"}