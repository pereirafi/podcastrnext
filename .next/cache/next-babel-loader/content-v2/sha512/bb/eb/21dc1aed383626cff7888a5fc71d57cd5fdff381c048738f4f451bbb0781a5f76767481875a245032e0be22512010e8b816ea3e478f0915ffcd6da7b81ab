{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/fillipi/Documents/GitHub/podcastrnext/src/pages/index.tsx\";\n// import { parseISO } from 'date-fns/locale';\nimport { api } from '../services/api';\nimport { convertDurationToTimeString } from '../convertDurationToTimeString';\nexport default function Home(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Index\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: JSON.stringify(props.episodes)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\nexport const getStaticProps = async () => {\n  const {\n    data\n  } = await api.get('episodes', {\n    params: {\n      _limit: 12,\n      _sort: 'published_at',\n      _order: 'desc'\n    }\n  });\n  console.log('====================================');\n  console.log(data);\n  console.log('====================================');\n  const episode = {\n    id: data.id,\n    title: data.title,\n    thumbnail: data.thumbnail,\n    members: data.member,\n    // publishedAt: format(parseISO(data.published_at), 'MMM-d-yy'),\n    // duration: Number(data.file.duration),\n    durationAsString: convertDurationToTimeString(Number(data.file.duration)),\n    description: data.description,\n    url: data.file.url\n  };\n  return {\n    props: {\n      episode\n    },\n    revalidate: 60 * 60 * 8\n  };\n};","map":{"version":3,"sources":["/Users/fillipi/Documents/GitHub/podcastrnext/src/pages/index.tsx"],"names":["api","convertDurationToTimeString","Home","props","JSON","stringify","episodes","getStaticProps","data","get","params","_limit","_sort","_order","console","log","episode","id","title","thumbnail","members","member","durationAsString","Number","file","duration","description","url","revalidate"],"mappings":";;AAIA;AACA,SAASA,GAAT,QAAoB,iBAApB;AACA,SAASC,2BAAT,QAA4C,gCAA5C;AAcA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAgC;AAC7C,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAIC,IAAI,CAACC,SAAL,CAAeF,KAAK,CAACG,QAArB;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;AAED,OAAO,MAAMC,cAA8B,GAAG,YAAY;AACxD,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMR,GAAG,CAACS,GAAJ,CAAQ,UAAR,EAAoB;AACzCC,IAAAA,MAAM,EAAE;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,KAAK,EAAE,cAFD;AAGNC,MAAAA,MAAM,EAAE;AAHF;AADiC,GAApB,CAAvB;AAQAC,EAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AAEA,QAAMC,OAAO,GAAG;AACdC,IAAAA,EAAE,EAAET,IAAI,CAACS,EADK;AAEdC,IAAAA,KAAK,EAAEV,IAAI,CAACU,KAFE;AAGdC,IAAAA,SAAS,EAAEX,IAAI,CAACW,SAHF;AAIdC,IAAAA,OAAO,EAAEZ,IAAI,CAACa,MAJA;AAKd;AACA;AACAC,IAAAA,gBAAgB,EAAErB,2BAA2B,CAACsB,MAAM,CAACf,IAAI,CAACgB,IAAL,CAAUC,QAAX,CAAP,CAP/B;AAQdC,IAAAA,WAAW,EAAElB,IAAI,CAACkB,WARJ;AASdC,IAAAA,GAAG,EAAEnB,IAAI,CAACgB,IAAL,CAAUG;AATD,GAAhB;AAYA,SAAO;AACLxB,IAAAA,KAAK,EAAE;AACLa,MAAAA;AADK,KADF;AAILY,IAAAA,UAAU,EAAE,KAAK,EAAL,GAAU;AAJjB,GAAP;AAMD,CA/BM","sourcesContent":["import { GetServerSideProps } from 'next';\n\nimport { GetStaticProps } from 'next';\nimport { format, parseISO } from 'date-fns';\n// import { parseISO } from 'date-fns/locale';\nimport { api } from '../services/api';\nimport { convertDurationToTimeString } from '../convertDurationToTimeString';\n\ntype Episode = {\n  id: string;\n  title: string;\n  members: string;\n  published_at: string;\n  // ...\n}\n\ntype HomeProps = {\n  episodes: Episode[];\n}\n\nexport default function Home(props: HomeProps) {\n  return (\n    <div>\n      <h1>Index</h1>\n      <p>{JSON.stringify(props.episodes)}</p>\n    </div>\n  )\n}\n\nexport const getStaticProps: GetStaticProps = async () => {\n  const { data } = await api.get('episodes', {\n    params: {\n      _limit: 12,\n      _sort: 'published_at',\n      _order: 'desc'\n    }\n  })\n\n  console.log('====================================');\n  console.log(data);\n  console.log('====================================');\n\n  const episode = {\n    id: data.id,\n    title: data.title,\n    thumbnail: data.thumbnail,\n    members: data.member,\n    // publishedAt: format(parseISO(data.published_at), 'MMM-d-yy'),\n    // duration: Number(data.file.duration),\n    durationAsString: convertDurationToTimeString(Number(data.file.duration)),\n    description: data.description,\n    url: data.file.url,\n  }\n\n  return {\n    props: {\n      episode,\n    },\n    revalidate: 60 * 60 * 8,\n  }\n}"]},"metadata":{},"sourceType":"module"}