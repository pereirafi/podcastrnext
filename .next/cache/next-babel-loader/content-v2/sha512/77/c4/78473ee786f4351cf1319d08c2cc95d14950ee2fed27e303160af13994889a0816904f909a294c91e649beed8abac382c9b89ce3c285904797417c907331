{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/fillipi/Documents/GitHub/podcastrnext/src/pages/index.tsx\";\nimport { format, parseISO } from 'date-fns';\nimport { api } from '../services/api';\nexport default function Home(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Index\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: new Date(props.episodes[0].published_at).toLocaleDateString\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\nexport const getStaticProps = async () => {\n  const {\n    data\n  } = await api.get('episodes', {\n    params: {\n      _limit: 12,\n      _sort: 'published_at',\n      _order: 'desc'\n    }\n  });\n  const episodes = data.map(episode => {\n    return {\n      id: episode.id,\n      title: episode.title,\n      thumbnail: episode.thumbnail,\n      members: episode.member,\n      publishedAt: format(parseISO(episode.published_at), 'd MMM yyyy'),\n      duration: Number(episode.file.duration),\n      description: episode.description,\n      url: episode.file.url\n    };\n  });\n  return {\n    props: {\n      episodes: data\n    },\n    revalidate: 60 * 60 * 8\n  };\n};","map":{"version":3,"sources":["/Users/fillipi/Documents/GitHub/podcastrnext/src/pages/index.tsx"],"names":["format","parseISO","api","Home","props","Date","episodes","published_at","toLocaleDateString","getStaticProps","data","get","params","_limit","_sort","_order","map","episode","id","title","thumbnail","members","member","publishedAt","duration","Number","file","description","url","revalidate"],"mappings":";;AACA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,UAAjC;AACA,SAASC,GAAT,QAAoB,iBAApB;AAcA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAgC;AAC7C,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAI,IAAIC,IAAJ,CAASD,KAAK,CAACE,QAAN,CAAe,CAAf,EAAkBC,YAA3B,EAAyCC;AAA7C;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;AAED,OAAO,MAAMC,cAA8B,GAAG,YAAY;AACxD,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMR,GAAG,CAACS,GAAJ,CAAQ,UAAR,EAAoB;AACzCC,IAAAA,MAAM,EAAE;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,KAAK,EAAE,cAFD;AAGNC,MAAAA,MAAM,EAAE;AAHF;AADiC,GAApB,CAAvB;AAQA,QAAMT,QAAQ,GAAGI,IAAI,CAACM,GAAL,CAASC,OAAO,IAAI;AACnC,WAAO;AACLC,MAAAA,EAAE,EAAED,OAAO,CAACC,EADP;AAELC,MAAAA,KAAK,EAAEF,OAAO,CAACE,KAFV;AAGLC,MAAAA,SAAS,EAAEH,OAAO,CAACG,SAHd;AAILC,MAAAA,OAAO,EAAEJ,OAAO,CAACK,MAJZ;AAKLC,MAAAA,WAAW,EAAEvB,MAAM,CAACC,QAAQ,CAACgB,OAAO,CAACV,YAAT,CAAT,EAAiC,YAAjC,CALd;AAMLiB,MAAAA,QAAQ,EAAEC,MAAM,CAACR,OAAO,CAACS,IAAR,CAAaF,QAAd,CANX;AAOLG,MAAAA,WAAW,EAAEV,OAAO,CAACU,WAPhB;AAQLC,MAAAA,GAAG,EAAEX,OAAO,CAACS,IAAR,CAAaE;AARb,KAAP;AAUD,GAXgB,CAAjB;AAaA,SAAO;AACLxB,IAAAA,KAAK,EAAE;AACLE,MAAAA,QAAQ,EAAEI;AADL,KADF;AAILmB,IAAAA,UAAU,EAAE,KAAK,EAAL,GAAU;AAJjB,GAAP;AAOD,CA7BM","sourcesContent":["import { GetStaticProps } from 'next';\nimport { format, parseISO } from 'date-fns';\nimport { api } from '../services/api';\n\ntype Episode = {\n  id: string;\n  title: string;\n  members: string;\n  published_at: string;\n  // ...\n}\n\ntype HomeProps = {\n  episodes: Episode[];\n}\n\nexport default function Home(props: HomeProps) {\n  return (\n    <div>\n      <h1>Index</h1>\n      <p>{new Date(props.episodes[0].published_at).toLocaleDateString}</p>\n    </div>\n  )\n}\n\nexport const getStaticProps: GetStaticProps = async () => {\n  const { data } = await api.get('episodes', {\n    params: {\n      _limit: 12,\n      _sort: 'published_at',\n      _order: 'desc'\n    }\n  })\n\n  const episodes = data.map(episode => {\n    return {\n      id: episode.id,\n      title: episode.title,\n      thumbnail: episode.thumbnail,\n      members: episode.member,\n      publishedAt: format(parseISO(episode.published_at), 'd MMM yyyy'),\n      duration: Number(episode.file.duration),\n      description: episode.description,\n      url: episode.file.url,\n    };\n  })\n\n  return {\n    props: {\n      episodes: data,\n    },\n    revalidate: 60 * 60 * 8,\n\n  }\n}"]},"metadata":{},"sourceType":"module"}